plugins {
	id "com.google.osdetector" version "1.4.0"
}

allprojects { // Except muli-ST
    apply plugin: 'java' // required for adding JUnit 4 dep
    apply plugin: 'eclipse'
    apply plugin: 'maven'
    group = 'de.wwu.muggl'
    version = '0.4.0-MULI-SNAPSHOT'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        jcenter()
        mavenCentral()
        maven { url 'http://maven-eclipse.github.io/maven' }
        flatDir { dirs '../lib' }
    }

    dependencies {
        testCompile "junit:junit:4.+"
    }

	task sourcesJar(type: Jar, dependsOn: classes) {
		classifier = 'sources'
		from sourceSets.main.allSource
	}

	artifacts {
		archives sourcesJar
	}

}

project('muggl-core') {
    test {
        onlyIf {
            project.hasProperty("testMugglCore")
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

def static getSwtVersion(){
	String swtVersion = '4.3.2';
	return swtVersion;
}

def static getSwtArch(){
	com.google.gradle.osdetector.OsDetector osdetector = new com.google.gradle.osdetector.OsDetector();
	String swtArch = null;
	if (osdetector.os == 'linux') {
		if (osdetector.arch == 'x86_64') {
			swtArch = 'gtk.linux.x86_64';
		} else if (osdetector.arch == 'x86_32') {
			swtArch = 'gtk.linux.x86';
		}
	} else if (osdetector.os == 'windows') {
		if (osdetector.arch == 'x86_64') {
			swtArch = 'win32.win32.x86_64';
		} else if (osdetector.arch == 'x86_32') {
			swtArch = 'win32.win32.x86';
		}
	} else if (osdetector.os == 'osx') {
		if (osdetector.arch == 'x86_64') {
			swtArch = 'cocoa.macosx.x86_64';
		}
	}

	if (swtArch == null) {
		throw new GradleScriptException("No suitable SWT library found for your platform.")
	}

	return swtArch;
}

/**
 * Used by each individual sub-project for settings that would otherwise not be generated.
 * Mostly, these settings configure the eclipse formatter.
 */
def static setProperties (jdt) {
	jdt.setProperty("org.eclipse.jdt.core.compiler.codegen.methodParameters", "do not generate")
	jdt.setProperty("org.eclipse.jdt.core.formatter.align_type_members_on_columns", "false")
	jdt.setProperty("org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression", "16")
	jdt.setProperty("org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation", "0")
	jdt.setProperty("org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant", "16")
	jdt.setProperty("org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call", "16")
	jdt.setProperty("org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation", "16")
	jdt.setProperty("org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression", "16")
	jdt.setProperty("org.eclipse.jdt.core.formatter.alignment_for_assignment", "0")
	jdt.setProperty("org.eclipse.jdt.core.formatter.alignment_for_binary_expression", "16")
	jdt.setProperty("org.eclipse.jdt.core.formatter.alignment_for_compact_if", "16")
	jdt.setProperty("org.eclipse.jdt.core.formatter.alignment_for_conditional_expression", "80")
	jdt.setProperty("org.eclipse.jdt.core.formatter.alignment_for_enum_constants", "0")
	jdt.setProperty("org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer", "16")
	jdt.setProperty("org.eclipse.jdt.core.formatter.alignment_for_method_declaration", "0")
	jdt.setProperty("org.eclipse.jdt.core.formatter.alignment_for_multiple_fields", "16")
	jdt.setProperty("org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration", "16")
	jdt.setProperty("org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration", "16")
	jdt.setProperty("org.eclipse.jdt.core.formatter.alignment_for_resources_in_try", "80")
	jdt.setProperty("org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation", "16")
	jdt.setProperty("org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration", "16")
	jdt.setProperty("org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration", "16")
	jdt.setProperty("org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration", "16")
	jdt.setProperty("org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration", "16")
	jdt.setProperty("org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration", "16")
	jdt.setProperty("org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch", "16")
	jdt.setProperty("org.eclipse.jdt.core.formatter.blank_lines_after_imports", "1")
	jdt.setProperty("org.eclipse.jdt.core.formatter.blank_lines_after_package", "1")
	jdt.setProperty("org.eclipse.jdt.core.formatter.blank_lines_before_field", "0")
	jdt.setProperty("org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration", "0")
	jdt.setProperty("org.eclipse.jdt.core.formatter.blank_lines_before_imports", "1")
	jdt.setProperty("org.eclipse.jdt.core.formatter.blank_lines_before_member_type", "1")
	jdt.setProperty("org.eclipse.jdt.core.formatter.blank_lines_before_method", "1")
	jdt.setProperty("org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk", "1")
	jdt.setProperty("org.eclipse.jdt.core.formatter.blank_lines_before_package", "0")
	jdt.setProperty("org.eclipse.jdt.core.formatter.blank_lines_between_import_groups", "1")
	jdt.setProperty("org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations", "1")
	jdt.setProperty("org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration", "end_of_line")
	jdt.setProperty("org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration", "end_of_line")
	jdt.setProperty("org.eclipse.jdt.core.formatter.brace_position_for_array_initializer", "end_of_line")
	jdt.setProperty("org.eclipse.jdt.core.formatter.brace_position_for_block", "end_of_line")
	jdt.setProperty("org.eclipse.jdt.core.formatter.brace_position_for_block_in_case", "end_of_line")
	jdt.setProperty("org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration", "end_of_line")
	jdt.setProperty("org.eclipse.jdt.core.formatter.brace_position_for_enum_constant", "end_of_line")
	jdt.setProperty("org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration", "end_of_line")
	jdt.setProperty("org.eclipse.jdt.core.formatter.brace_position_for_lambda_body", "end_of_line")
	jdt.setProperty("org.eclipse.jdt.core.formatter.brace_position_for_method_declaration", "end_of_line")
	jdt.setProperty("org.eclipse.jdt.core.formatter.brace_position_for_switch", "end_of_line")
	jdt.setProperty("org.eclipse.jdt.core.formatter.brace_position_for_type_declaration", "end_of_line")
	jdt.setProperty("org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment", "false")
	jdt.setProperty("org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment", "false")
	jdt.setProperty("org.eclipse.jdt.core.formatter.comment.format_block_comments", "true")
	jdt.setProperty("org.eclipse.jdt.core.formatter.comment.format_header", "false")
	jdt.setProperty("org.eclipse.jdt.core.formatter.comment.format_html", "true")
	jdt.setProperty("org.eclipse.jdt.core.formatter.comment.format_javadoc_comments", "true")
	jdt.setProperty("org.eclipse.jdt.core.formatter.comment.format_line_comments", "true")
	jdt.setProperty("org.eclipse.jdt.core.formatter.comment.format_source_code", "true")
	jdt.setProperty("org.eclipse.jdt.core.formatter.comment.indent_parameter_description", "true")
	jdt.setProperty("org.eclipse.jdt.core.formatter.comment.indent_root_tags", "true")
	jdt.setProperty("org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.comment.line_length", "120")
	jdt.setProperty("org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries", "true")
	jdt.setProperty("org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries", "true")
	jdt.setProperty("org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments", "false")
	jdt.setProperty("org.eclipse.jdt.core.formatter.compact_else_if", "true")
	jdt.setProperty("org.eclipse.jdt.core.formatter.continuation_indentation", "2")
	jdt.setProperty("org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer", "2")
	jdt.setProperty("org.eclipse.jdt.core.formatter.disabling_tag", "@formatter:off")
	jdt.setProperty("org.eclipse.jdt.core.formatter.enabling_tag", "@formatter:on")
	jdt.setProperty("org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line", "false")
	jdt.setProperty("org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column", "true")
	jdt.setProperty("org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header", "true")
	jdt.setProperty("org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header", "true")
	jdt.setProperty("org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header", "true")
	jdt.setProperty("org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header", "true")
	jdt.setProperty("org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases", "true")
	jdt.setProperty("org.eclipse.jdt.core.formatter.indent_empty_lines", "false")
	jdt.setProperty("org.eclipse.jdt.core.formatter.indent_statements_compare_to_block", "true")
	jdt.setProperty("org.eclipse.jdt.core.formatter.indent_statements_compare_to_body", "true")
	jdt.setProperty("org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases", "true")
	jdt.setProperty("org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch", "false")
	jdt.setProperty("org.eclipse.jdt.core.formatter.indentation.size", "4")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_new_line_after_label", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_binary_operator", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_ellipsis", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_after_unary_operator", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_binary_operator", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_ellipsis", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional", "insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_semicolon", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_before_unary_operator", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation", "do not insert")
	jdt.setProperty("org.eclipse.jdt.core.formatter.join_lines_in_comments", "true")
	jdt.setProperty("org.eclipse.jdt.core.formatter.join_wrapped_lines", "true")
	jdt.setProperty("org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line", "false")
	jdt.setProperty("org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line", "false")
	jdt.setProperty("org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line", "false")
	jdt.setProperty("org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line", "false")
	jdt.setProperty("org.eclipse.jdt.core.formatter.lineSplit", "120")
	jdt.setProperty("org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column", "false")
	jdt.setProperty("org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column", "false")
	jdt.setProperty("org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body", "0")
	jdt.setProperty("org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve", "1")
	jdt.setProperty("org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line", "true")
	jdt.setProperty("org.eclipse.jdt.core.formatter.tabulation.char", "tab")
	jdt.setProperty("org.eclipse.jdt.core.formatter.tabulation.size", "4")
	jdt.setProperty("org.eclipse.jdt.core.formatter.use_on_off_tags", "false")
	jdt.setProperty("org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations", "false")
	jdt.setProperty("org.eclipse.jdt.core.formatter.wrap_before_binary_operator", "true")
	jdt.setProperty("org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch", "true")
	jdt.setProperty("org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested", "true")
}
